{
    "openapi": "3.0.2",
    "info": {
        "title": "Apicurio API Lifecycle Hub API [v1]",
        "version": "1.0.x",
        "description": "Apicurio API Lifecycle Hub.",
        "contact": {
            "name": "Apicurio",
            "url": "https://github.com/apicurio/api-lifecycle-hub",
            "email": "apicurio@lists.jboss.org"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0"
        }
    },
    "paths": {
        "/system/info": {
            "summary": "Retrieve system information",
            "get": {
                "tags": [
                    "System"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SystemInfo"
                                }
                            }
                        },
                        "description": "On success, returns the system information."
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "getSystemInfo",
                "summary": "Get system information",
                "description": "This operation retrieves information about the running system, such as the version\nof the software and when it was built."
            }
        },
        "/users/me": {
            "summary": "Retrieves information about the current user",
            "get": {
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserInfo"
                                }
                            }
                        },
                        "description": "Response when the endpoint is successfully invoked."
                    },
                    "500": {
                        "$ref": "#/components/responses/ServerError"
                    }
                },
                "operationId": "getCurrentUserInfo",
                "summary": "Get current user",
                "description": "Returns information about the currently authenticated user."
            }
        },
        "x-codegen-contextRoot": "/apis/hub/v1"
    },
    "components": {
        "schemas": {
            "SystemInfo": {
                "title": "Root Type for SystemInfo",
                "description": "",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "builtOn": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "example": {
                    "name": "Apicurio API Lifecycle Hub (SQL)",
                    "description": "The Apicurio API Lifecycle Hub application.",
                    "version": "1.0.0.Final",
                    "builtOn": "2024-03-19T12:55:00Z"
                }
            },
            "UserInfo": {
                "title": "Root Type for UserInfo",
                "description": "Information about a single user.",
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "admin": {
                        "type": "boolean"
                    },
                    "developer": {
                        "type": "boolean"
                    },
                    "viewer": {
                        "type": "boolean"
                    }
                },
                "example": {
                    "username": "dprince",
                    "displayName": "Diana Prince",
                    "admin": true,
                    "developer": false,
                    "viewer": false
                }
            },
            "ObjectReference": {
                "required": [
                    "id",
                    "kind"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "href": {
                        "type": "string"
                    }
                }
            },
            "Error": {
                "title": "Error",
                "description": "",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ObjectReference"
                    },
                    {
                        "required": [
                            "code",
                            "reason"
                        ],
                        "type": "object",
                        "properties": {
                            "reason": {
                                "type": "string"
                            },
                            "code": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "responses": {
            "NotFound": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "examples": {
                            "NotFoundExample": {
                                "value": {
                                    "error_code": 404,
                                    "message": "No artifact with id 'Topic-1/Inbound' could be found."
                                }
                            }
                        }
                    }
                },
                "description": "Common response for all operations that can return a `404` error."
            },
            "MethodNotAllowed": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "examples": {
                            "MethodNotAllowedExample": {
                                "value": {
                                    "error_code": 405,
                                    "message": "Method is currently not supported or disabled."
                                }
                            }
                        }
                    }
                },
                "description": "Common response for all operations that can fail due to method not allowed or disabled."
            },
            "ServerError": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "examples": {
                            "ErrorExample": {
                                "value": {
                                    "error_code": 500,
                                    "message": "Lost connection to the database."
                                }
                            }
                        }
                    }
                },
                "description": "Common response for all operations that can fail with an unexpected server error."
            },
            "BadRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                },
                "description": "Common response for all operations that can return a `400` error."
            },
            "Conflict": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "examples": {
                            "ConflictExample": {
                                "value": {
                                    "error_code": 409,
                                    "message": "The artifact content was invalid."
                                }
                            }
                        }
                    }
                },
                "description": "Common response used when an input conflicts with existing data."
            }
        }
    },
    "tags": [
        {
            "name": "System",
            "description": "System operations."
        }
    ],
    "x-codegen": {
        "suppress-date-time-formatting": true,
        "bean-annotations": [
            "io.quarkus.runtime.annotations.RegisterForReflection",
            {
                "annotation": "lombok.experimental.SuperBuilder",
                "excludeEnums": true
            },
            {
                "annotation": "lombok.AllArgsConstructor",
                "excludeEnums": true
            },
            {
                "annotation": "lombok.NoArgsConstructor",
                "excludeEnums": true
            },
            {
                "annotation": "lombok.EqualsAndHashCode",
                "excludeEnums": true
            },
            {
                "annotation": "lombok.ToString(callSuper = true)",
                "excludeEnums": true
            }
        ]
    }
}